---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'a'> {
  data: string;
  direction?: 'side' | 'bottom';
}

const { data, direction = 'side', class: className, ...props } = Astro.props;
---

<a data-replace={data} class:list={[className, direction]} {...props}>
  <span>{data}</span>
</a>

<style>
  a {
    overflow: hidden;
    position: relative;
    display: inline-block;
  }

  a::after {
    content: attr(data-replace);
    position: absolute;
    width: 100%;
    left: 0;
    height: 100%;
    top: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    transform-origin: 100% 50%;
  }

  /* Default side animation */
  a.side::after {
    transform: translate3d(200%, 0, 0);
    transition: transform 0.3s cubic-bezier(0.76, 0, 0.24, 1);
    transition-delay: 250ms;
  }

  a.side:hover::after {
    transform: translate3d(0, 0, 0);
  }

  a.side span {
    display: inline-block;
    transition: transform 0.3s cubic-bezier(0.76, 0, 0.24, 1);
    transition-delay: 250ms;
  }

  a.side:hover span {
    transform: translate3d(-200%, 0, 0);
  }

  /* Bottom animation */
  a.bottom::after {
    transform: translate3d(0, 200%, 0);
    transition: transform 0.3s cubic-bezier(0.76, 0, 0.24, 1);
    transition-delay: 250ms;
  }

  a.bottom:hover::after {
    transform: translate3d(0, 0, 0);
  }

  a.bottom span {
    display: inline-block;
    transition: transform 0.3s cubic-bezier(0.76, 0, 0.24, 1);
    transition-delay: 250ms;
  }

  a.bottom:hover span {
    transform: translate3d(0, -200%, 0);
  }
</style>