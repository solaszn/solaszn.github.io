---
// src/components/ThemeToggle.astro
import { Icon } from "astro-icon/components";
---

<button id="themeToggle" data-theme-toggle class="relative w-10 h-10 hover:cursor-pointer flex items-center justify-center border text-black dark:text-white" aria-label="Toggle Theme">
  <Icon name="sun" class="sun absolute w-[18px] h-[18px] transition-all duration-500 rotate-[60deg] scale-0 dark:rotate-0 dark:scale-100" />
  <Icon name="moon" class="moon absolute w-[18px] h-[18px] transition-all duration-500 rotate-0 scale-100 dark:rotate-[-60deg] dark:scale-0" />
</button>

<script>
  function initializeThemeToggle() {
    // Remove any existing event listeners
    const themeToggle = document.getElementById("themeToggle");
    const clone = themeToggle?.cloneNode(true);
    if (clone && themeToggle?.parentNode) {
      themeToggle.parentNode.replaceChild(clone, themeToggle);
    }

    // Get theme from localStorage or default to dark
    const theme = localStorage.getItem('theme') ?? 'dark';
    
    // Set initial theme
    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
    } else {
      document.documentElement.classList.add('dark');
    }

    // Handle theme toggle
    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");
      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    // Add click event listener to the cloned button
    clone?.addEventListener("click", handleToggleClick);
  }

  // Initialize on first load
  document.addEventListener("DOMContentLoaded", initializeThemeToggle);

  // Initialize on subsequent navigation
  document.addEventListener("astro:after-swap", initializeThemeToggle);
</script>

<style>
  button[data-theme-toggle] {
    position: relative;
    /* overflow: hidden; */
    box-sizing: content-box;
    /* border: 1px solid red; */
    /* width: 24px; */
    /* height: 24px; */
  }

  /* :global(body:not(.dark) .moon) {
    transform: rotate(60deg);
    transform-origin: 50% 200%;
  }

  :global(.dark .sun) {
    transform: rotate(-60deg);
  } */
</style>
